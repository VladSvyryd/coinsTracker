@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/


$md-primary: (
  50 : #e6f6ed,
    100 : #bfe9d2,
    200 : #95dab4,
    300 : #6bcb96,
    400 : #4bbf80,
    500 : #2bb469,
    600 : #26ad61,
    700 : #20a456,
    800 : #1a9c4c,
    900 : #108c3b,
    A100 : #beffd2,
    A200 : #8bffae,
    A400 : #58ff8a,
    A700 : #3fff79,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

$md-accent: (
    50 : #fde4eb,
    100 : #fabbcd,
    200 : #f78dac,
    300 : #f35f8b,
    400 : #f13d72,
    500 : #ee1b59,
    600 : #ec1851,
    700 : #e91448,
    800 : #e7103e,
    900 : #e2082e,
    A100 : #ffffff,
    A200 : #ffd8dd,
    A400 : #ffa5b1,
    A700 : #ff8b9b,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);



$md-white: (
    50 : #fefefe,
    100 : #fbfbfb,
    200 : #f9f9f9,
    300 : #f7f7f7,
    400 : #f5f5f5,
    500 : #f3f3f3,
    600 : #f1f1f1,
    700 : #efefef,
    800 : #ededed,
    900 : #eaeaea,
    A100 : #ffffff,
    A200 : #ffffff,
    A400 : #ffffff,
    A700 : #ffffff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #000000,
        700 : #000000,
        800 : #000000,
        900 : #000000,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);

$md-warning: (
       50 : #feebe8,
    100 : #fccec6,
    200 : #fbada0,
    300 : #f98c7a,
    400 : #f7735e,
    500 : #f65a41,
    600 : #f5523b,
    700 : #f34832,
    800 : #f23f2a,
    900 : #ef2e1c,
    A100 : #ffffff,
    A200 : #fff1f1,
    A400 : #ffc2be,
    A700 : #ffaaa4,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #000000,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #000000,
    )
);
$my-dark-theme-background: (
  status-bar: #242b51,
  app-bar:    #222646,
  background: #222646,
  hover:      rgba(white, 0.04),
  card:       map_get($mat-red, 800),
  dialog:     #242b51,
  disabled-button: $white-12-opacity,
  raised-button: map-get($mat-grey, 800),
  focused-button: map_get($md-accent, 500),
  selected-button: map_get($mat-grey, 900),
  selected-disabled-button: map_get($mat-grey, 800),
  disabled-button-toggle: black,
  unselected-chip: map_get($mat-grey, 700),
  disabled-list-option: black,
  icon: white
);

$my-dark-theme-foreground: (
  base:              #242b51,
  divider:           $white-12-opacity,
  dividers:          $white-12-opacity,
  disabled:          rgba(white, 0.3),
  disabled-button:   rgba(white, 0.3),
   focused-button: map_get($md-accent, 500),
  disabled-text:     rgba(white, 0.3),
  hint-text:         rgba(white, 0.3),
  secondary-text:    rgba(white, 0.7),
  icon:              white,
  icons:             white,
  text:              white,
  slider-min:        white,
  slider-off:        rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);
// instead of creating a theme with mat-light-theme like a sane person, we will create our own theme-creating function that lets us apply our own foreground and background palettes.
@function create-wonky-theme($primary, $accent, $warn) {
  @return (
    primary: $primary,
    accent: $accent,
    warn: $warn,
    is-dark: false,
    foreground: $my-dark-theme-foreground,
    background: $my-dark-theme-background,
  );
}


$coinKeeper-app-primary: mat-palette($md-primary, 500);
$coinKeeper-app-accent:  mat-palette($md-accent, 500, 900, A100);
$coinKeeper-app-warning:  mat-palette($md-warning, 500);
$background-color: map_get($md-white, 500);
// Create the theme object (a Sass map containing all of the palettes).
$coinKeeper-app-theme: create-wonky-theme($coinKeeper-app-primary, $coinKeeper-app-accent,$coinKeeper-app-warning);


// Insert custom background color
$background: map-get($coinKeeper-app-theme, background);
$background: map_merge($background, (background: $background-color));
$theme: map_merge($coinKeeper-app-theme, (background: $background));
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($coinKeeper-app-theme);

$coinKeeper-white: (
    50 : #f1f1f2,
    100 : #ddddde,
    200 : #c6c6c9,
    300 : #afafb3,
    400 : #9e9ea2,
    500 : #8d8d92,
    600 : #85858a,
    700 : #7a7a7f,
    800 : #707075,
    900 : #5d5d63,
    A100 : #d8d8fc,
    A200 : #a9a9f7,
    A400 : #6e6eff,
    A700 : #5555ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #000000,
        500 : #000000,
        600 : #000000,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #ffffff,
        A700 : #ffffff,
    )
);


$coinKeeper-lila: (
    50 : #f3e5f6,
    100 : #e1bee7,
    200 : #ce93d8,
    300 : #ba68c8,
    400 : #ab47bc,
    500 : #9c27b0,
    600 : #9423a9,
    700 : #8a1da0,
    800 : #801797,
    900 : #6e0e87,
    A100 : #efb8ff,
    A200 : #e485ff,
    A400 : #d852ff,
    A700 : #d238ff,
    contrast: (
        50 : #000000,
        100 : #000000,
        200 : #000000,
        300 : #000000,
        400 : #ffffff,
        500 : #ffffff,
        600 : #ffffff,
        700 : #ffffff,
        800 : #ffffff,
        900 : #ffffff,
        A100 : #000000,
        A200 : #000000,
        A400 : #000000,
        A700 : #ffffff,
    )
);

$background-color: map_get($mat-grey, 900);
// Define an alternate dark theme.
$dark-coinKeeper-primary: mat-palette($coinKeeper-white,800, 300, 900);
$dark-coinKeeper-accent:  mat-palette($coinKeeper-lila, 500, 100, 600);
$dark-coinKeeper-theme:   mat-dark-theme($dark-coinKeeper-primary, $dark-coinKeeper-accent);

// Insert custom background color
$background: map-get($dark-coinKeeper-theme, background);
$background: map_merge($background, (background: $background-color));
$theme: map_merge($dark-coinKeeper-theme, (background: $background));
// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.unicorn-dark-theme {
  @include angular-material-theme($dark-coinKeeper-theme);

}
